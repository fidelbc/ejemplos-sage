#+title: Diagrama de telara침a
#+date: 2014-09-05 12:45
#+keywords: [sistemas din치micos, graficaci칩n, interact]

C칩digo tomado de [[http://wiki.sagemath.org/interact/dynsys#Cobweb_diagrams_on_.5B0.2C1.5D][Sage Wiki]].

#+BEGIN_SRC sage
def cobweb(a_function, start, mask = 0, iterations = 20, xmin = 0, xmax = 1):
    '''
    Returns a graphics object of a plot of the function and a cobweb trajectory starting from the value start.

    INPUT:
	a_function: a function of one variable
	start: the starting value of the iteration
	mask: (optional) the number of initial iterates to ignore
	iterations: (optional) the number of iterations to draw, following the masked iterations
	xmin: (optional) the lower end of the plotted interval
	xmax: (optional) the upper end of the plotted interval

    EXAMPLES:
	sage: f = lambda x: 3.9*x*(1-x)
	sage: show(cobweb(f,.01,iterations=200), xmin = 0, xmax = 1, ymin=0)

    '''
    basic_plot = plot(a_function, xmin = xmin, xmax = xmax, color='red')
    id_plot = plot(lambda x: x, xmin = xmin, xmax = xmax, color='red')
    iter_list = []
    current = start
    for i in range(mask):
	current = a_function(current)
    cobweb = Graphics()
    for i in range(iterations):
        next = a_function(current)
        cobweb += line( [[current,next], [next,next]], rgbcolor=colormaps['cool'](i/float(iterations))[:3] )
        if i+1 < iterations:
            cobweb += line( [[next,next], [next, a_function(next)]], rgbcolor=colormaps['cool'](i/float(iterations))[:3] )
        else:
            cobweb += point( [next,next], rgbcolor=colormaps['cool'](i/float(iterations))[:3],size=20 )
        current = next
    return basic_plot + id_plot + cobwebvar('x')
var('x')
@interact
def cobwebber(f_text = input_box(default = "3.8*x*(1-x)",label = "function", type=str), start_val = slider(0,1,.01,.5,label = 'start value'), its = slider([2^i for i in range(0,12)],default = 16, label="iterations")):
    def f(x):
        return eval(f_text)
    show(cobweb(f, start_val, iterations = its))
#+END_SRC

